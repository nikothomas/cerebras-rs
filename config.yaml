# OpenAPI Generator configuration for Cerebras Rust SDK
templateDir: custom-templates
generatorName: rust
outputDir: .

# Additional properties for Rust generation
additionalProperties:
  # Package configuration
  packageName: cerebras-rs
  packageVersion: 0.0.1
  
  # Rust-specific optimizations
  avoidBoxedModels: true
  bestFitInt: true
  preferUnsignedInt: true
  supportAsync: true
  
  # Additional optimizations
  useSingleRequestParameter: false
  enumNameSuffix: ""
  structPrefix: false
  
  # Library configuration
  library: reqwest
  
  # Feature flags
  supportMultipleResponses: true
  
  # Documentation
  appName: "Cerebras Rust SDK"
  appDescription: "High-performance Rust SDK for Cerebras Inference API"
  infoEmail: "support@cerebras.ai"
  licenseInfo: "MIT"
  
  # Code generation features
  hideGenerationTimestamp: true
  
# Global properties
globalProperties:
  apis: ""
  models: ""
  supportingFiles: ""
  apiDocs: true
  modelDocs: true
  apiTests: false
  modelTests: false

# Type mappings for better Rust types
typeMappings:
  integer: "u32"
  long: "u64"
  number: "f64"
  float: "f32"
  double: "f64"
  string: "String"
  byte: "Vec<u8>"
  binary: "Vec<u8>"
  boolean: "bool"
  date: "chrono::NaiveDate"
  dateTime: "chrono::DateTime<chrono::Utc>"
  password: "String"
  file: "std::path::PathBuf"
  array: "Vec"
  map: "std::collections::HashMap"
  object: "serde_json::Value"
  UUID: "uuid::Uuid"
  URI: "String"
  Email: "String"
  
# Import mappings
importMappings:
  JsonSchema: "crate::models::JsonSchema"
  
# Custom files to generate
files:
  # Enhanced lib.rs with better exports and features
  lib.mustache:
    templateType: SupportingFiles
    destinationFilename: lib.rs
    folder: src
    
  # Custom client implementation with streaming support
  client.mustache:
    templateType: SupportingFiles
    destinationFilename: client.rs
    folder: src
    
  # Builder pattern module
  builders/mod.mustache:
    templateType: SupportingFiles
    destinationFilename: mod.rs
    folder: src/builders
    
  # Builder pattern for requests
  builders/chat_completion_builder.mustache:
    templateType: SupportingFiles
    destinationFilename: chat_completion_builder.rs
    folder: src/builders
    
  builders/completion_builder.mustache:
    templateType: SupportingFiles
    destinationFilename: completion_builder.rs
    folder: src/builders
    
  # Streaming module
  streaming/mod.mustache:
    templateType: SupportingFiles
    destinationFilename: mod.rs
    folder: src/streaming
    
  # Streaming support
  streaming/stream_handler.mustache:
    templateType: SupportingFiles
    destinationFilename: stream_handler.rs
    folder: src/streaming
    
  # Error handling improvements
  error.mustache:
    templateType: SupportingFiles
    destinationFilename: error.rs
    folder: src
    
  # Examples
  examples/chat_completion.mustache:
    templateType: SupportingFiles
    destinationFilename: chat_completion.rs
    folder: examples
    
  examples/streaming.mustache:
    templateType: SupportingFiles
    destinationFilename: streaming.rs
    folder: examples
    
  examples/function_calling.mustache:
    templateType: SupportingFiles
    destinationFilename: function_calling.rs
    folder: examples

  # Autogenerated integration tests
  integration_test.mustache:
    templateType: SupportingFiles
    destinationFilename: integration.rs
    folder: tests
    
  # Enhanced README
  README.mustache:
    templateType: SupportingFiles
    destinationFilename: README.md
    
  # GitHub Actions CI
  .github/workflows/ci.yml:
    templateType: SupportingFiles
    destinationFilename: ci.yml
    folder: .github/workflows
