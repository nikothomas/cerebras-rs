/*
 * Cerebras Inference API
 *
 * The Cerebras Inference API offers developers a low-latency solution for AI model inference  powered by Cerebras Wafer-Scale Engines and CS-3 systems. The API provides access to  high-performance language models with unprecedented speed for AI inference workloads. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cerebras.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum CreateChatCompletion200Response {
    CreateChatCompletionResponse(models::CreateChatCompletionResponse),
    ChatCompletionChunk(models::ChatCompletionChunk),
}

impl Default for CreateChatCompletion200Response {
    fn default() -> Self {
        Self::CreateChatCompletionResponse(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "chat.completion.chunk")]
    ChatPeriodCompletionPeriodChunk,
}

impl Default for Object {
    fn default() -> Object {
        Self::ChatPeriodCompletionPeriodChunk
    }
}

